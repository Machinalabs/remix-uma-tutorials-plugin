defaults: &defaults
  working_directory: ~/remix-uma-tutorials
  docker:
    - image: circleci/node:12.18.3

aliases:
  - &restore_cache
    restore_cache:
      name: Restore Yarn Package Cache
      keys:
        - yarn-packages-v1-{{ checksum "yarn.lock" }}
        - yarn-packages-v1-
        - yarn-packages-v1-

version: 2.0

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Install Dependencies
          command: |
            echo 'Installing dependencies'
            sudo apt-get -y update
            sudo apt-get -y install libudev-dev libusb-1.0-0-dev
            yarn --frozen-lockfile
      - save_cache: 
          name: Save Yarn Package Cache
          paths:
            - node_modules
          key: yarn-packages-v1-{{ checksum "yarn.lock" }}
  
  tslint-and-format: 
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: TSLint
          command: yarn tslint
      - run:
          name: Check formatting (Prettier)
          command: yarn prettier:check
  
  unit-tests:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run unit tests with JUnit as reporter
          command: yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  build: 
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - build

  deploy: 
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - attach_workspace:
          at: ./
      - run:
          name: Deploy
          command: yarn deploy

workflows:
  version: 2
  build-deploy:
    jobs:
      - setup
      - tslint-and-format:
          requires:
            - setup
      - unit-tests:
          requires:
            - setup
      - build:
          requires:
            - tslint-and-format
            - unit-tests
      - deploy:
          context: SolidStudio
          requires:
            - build
          filters:
            branches:
              only: main