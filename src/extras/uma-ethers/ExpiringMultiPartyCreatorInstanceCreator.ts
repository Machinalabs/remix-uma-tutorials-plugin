import { Signer } from "ethers"
import { Provider, TransactionRequest } from "@ethersproject/providers"
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts"

import { ExpiringMultiPartyCreator } from "./ExpiringMultiPartyCreatorContractInterface"

export class ExpiringMultiPartyCreatorInstanceCreator extends ContractFactory {
  constructor(linkLibraryAddresses: ExpiringMultiPartyCreatorLibraryAddresses, signer?: Signer) {
    super(_abi, ExpiringMultiPartyCreatorInstanceCreator.linkBytecode(linkLibraryAddresses), signer)
  }

  static linkBytecode(linkLibraryAddresses: ExpiringMultiPartyCreatorLibraryAddresses): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$585a446ef18259666e65e81865270bd4dc\\$__", "g"),
      linkLibraryAddresses["ExpiringMultiPartyLib"].replace(/^0x/, "").toLowerCase()
    )

    return linkedBytecode
  }

  deploy(
    _finderAddress: string,
    _collateralTokenWhitelist: string,
    _tokenFactoryAddress: string,
    _timerAddress: string,
    overrides?: Overrides
  ): Promise<ExpiringMultiPartyCreator> {
    return super.deploy(
      _finderAddress,
      _collateralTokenWhitelist,
      _tokenFactoryAddress,
      _timerAddress,
      overrides || {}
    ) as Promise<ExpiringMultiPartyCreator>
  }
  getDeployTransaction(
    _finderAddress: string,
    _collateralTokenWhitelist: string,
    _tokenFactoryAddress: string,
    _timerAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _finderAddress,
      _collateralTokenWhitelist,
      _tokenFactoryAddress,
      _timerAddress,
      overrides || {}
    )
  }
  attach(address: string): ExpiringMultiPartyCreator {
    return super.attach(address) as ExpiringMultiPartyCreator
  }
  connect(signer: Signer): ExpiringMultiPartyCreatorInstanceCreator {
    return super.connect(signer) as ExpiringMultiPartyCreatorInstanceCreator
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ExpiringMultiPartyCreator {
    return new Contract(address, _abi, signerOrProvider) as ExpiringMultiPartyCreator
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_finderAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_collateralTokenWhitelist",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenFactoryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_timerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "expiringMultiPartyAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployerAddress",
        type: "address",
      },
    ],
    name: "CreatedExpiringMultiParty",
    type: "event",
  },
  {
    inputs: [],
    name: "STRICT_LIQUIDATION_LIVENESS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STRICT_WITHDRAWAL_LIVENESS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralTokenWhitelist",
    outputs: [
      {
        internalType: "contract AddressWhitelist",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "expirationTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collateralAddress",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "priceFeedIdentifier",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "syntheticName",
            type: "string",
          },
          {
            internalType: "string",
            name: "syntheticSymbol",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "collateralRequirement",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "disputeBondPct",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "sponsorDisputeRewardPct",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "disputerDisputeRewardPct",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
              },
            ],
            internalType: "struct FixedPoint.Unsigned",
            name: "minSponsorTokens",
            type: "tuple",
          },
        ],
        internalType: "struct ExpiringMultiPartyCreator.Params",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createExpiringMultiParty",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "setCurrentTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenFactoryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validExpirationTimestamps",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
]

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001be838038062001be88339818101604052620000379190810190620003d2565b8084806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060018060146101000a81548160ff021916908315150217905550620000e66200030b60201b60201c565b620000f66200035f60201b60201c565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200018262000398565b604051806102000160405280635e83d98063ffffffff168152602001635eab668063ffffffff168152602001635ed4450063ffffffff168152602001635efbd20063ffffffff168152602001635f24b08063ffffffff168152602001635f4d8f0063ffffffff168152602001635f751c0063ffffffff168152602001635f9dfa8063ffffffff168152602001635fc5878063ffffffff168152602001635fee660063ffffffff168152602001636017448063ffffffff16815260200163603c2e8063ffffffff1681526020016360650d0063ffffffff16815260200163608c9a0063ffffffff1681526020016360b5788063ffffffff1681526020016360dd058063ffffffff16815250905060008090505b6010811015620002ef57600160046000848460108110620002b157fe5b602002015163ffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808060010191505062000294565b5050620003016200037c60201b60201c565b5050505062000501565b600160149054906101000a900460ff166200035d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003549062000480565b60405180910390fd5b565b6000600160146101000a81548160ff021916908315150217905550565b60018060146101000a81548160ff021916908315150217905550565b604051806102000160405280601090602082028038833980820191505090505090565b600081519050620003cc81620004e7565b92915050565b60008060008060808587031215620003e957600080fd5b6000620003f987828801620003bb565b94505060206200040c87828801620003bb565b93505060406200041f87828801620003bb565b92505060606200043287828801620003bb565b91505092959194509250565b60006200044d601f83620004a2565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b600060208201905081810360008301526200049b816200043e565b9050919050565b600082825260208201905092915050565b6000620004c082620004c7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620004f281620004b3565b8114620004fe57600080fd5b50565b6116d780620005116000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063359db91a11610066578063359db91a14610120578063400f1de61461013e5780635f8e19781461016e578063865414d51461018c578063be19f0a7146101aa57610093565b80630cb55fbe146100985780631c39c38d146100c857806322f8e566146100e657806329cb924d14610102575b600080fd5b6100b260048036036100ad9190810190610f16565b6101c8565b6040516100bf919061138f565b60405180910390f35b6100d06101e8565b6040516100dd9190611344565b60405180910390f35b61010060048036036100fb9190810190610f16565b61020e565b005b61010a6102fa565b60405161011791906114a2565b60405180910390f35b6101286103ff565b60405161013591906114a2565b60405180910390f35b61015860048036036101539190810190610ed5565b610405565b6040516101659190611344565b60405180910390f35b61017661054f565b60405161018391906114a2565b60405180910390f35b610194610555565b6040516101a191906113c5565b60405180910390f35b6101b261057b565b6040516101bf9190611344565b60405180910390f35b60046020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561026a57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322f8e566826040518263ffffffff1660e01b81526004016102c591906114a2565b600060405180830381600087803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103f857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b957600080fd5b505afa1580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103f19190810190610f3f565b90506103fc565b4290505b90565b611c2081565b600061040f6105a1565b6104176105f2565b600073__$585a446ef18259666e65e81865270bd4dc$__63bdc3f24461043c8561060f565b6040518263ffffffff1660e01b81526004016104589190611480565b60206040518083038186803b15801561047057600080fd5b505af4158015610484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104a89190810190610e83565b90506104e460006040519080825280602002602001820160405280156104dd5781602001602082028038833980820191505090505b50826109c9565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167ff360b00b309dfe6565667df6b06eab15d0e0958d5e82d89a399ae7dd417b4b0960405160405180910390a38091505061054a610b0f565b919050565b611c2081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff166105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e790611460565b60405180910390fd5b565b6000600160146101000a81548160ff021916908315150217905550565b610617610b55565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506107318260000151610b2b565b610770576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610767906113e0565b60405180910390fd5b600082606001515114156107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b090611420565b60405180910390fd5b60008260800151511415610802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f990611400565b60405180910390fd5b611c20816020018181525050611c2081610140018181525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a3ab67283602001516040518263ffffffff1660e01b815260040161087a9190611344565b60206040518083038186803b15801561089257600080fd5b505afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108ca9190810190610eac565b610909576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090090611440565b60405180910390fd5b81600001518160000181815250508160200151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081604001518160c001818152505081606001518160e0018190525081608001518161010001819052508160a001518161016001819052508160c001518161018001819052508160e00151816101a00181905250816101000151816101c00181905250816101200151816101200181905250919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663aafd5e407f52656769737472790000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610a4a91906113aa565b60206040518083038186803b158015610a6257600080fd5b505afa158015610a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a9a9190810190610e83565b90508073ffffffffffffffffffffffffffffffffffffffff166366c8c25085856040518363ffffffff1660e01b8152600401610ad792919061135f565b600060405180830381600087803b158015610af157600080fd5b505af1158015610b05573d6000803e3d6000fd5b5050505050505050565b60018060146101000a81548160ff021916908315150217905550565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b604051806101e001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681526020016060815260200160608152602001610c03610c44565b815260200160008152602001610c17610c44565b8152602001610c24610c44565b8152602001610c31610c44565b8152602001610c3e610c44565b81525090565b6040518060200160405280600081525090565b600081359050610c6681611645565b92915050565b600081519050610c7b81611645565b92915050565b600081519050610c908161165c565b92915050565b600081359050610ca581611673565b92915050565b600082601f830112610cbc57600080fd5b8135610ccf610cca826114ea565b6114bd565b91508082526020830160208301858383011115610ceb57600080fd5b610cf68382846115f2565b50505092915050565b60006101408284031215610d1257600080fd5b610d1d6101406114bd565b90506000610d2d84828501610e59565b6000830152506020610d4184828501610c57565b6020830152506040610d5584828501610c96565b604083015250606082013567ffffffffffffffff811115610d7557600080fd5b610d8184828501610cab565b606083015250608082013567ffffffffffffffff811115610da157600080fd5b610dad84828501610cab565b60808301525060a0610dc184828501610e21565b60a08301525060c0610dd584828501610e21565b60c08301525060e0610de984828501610e21565b60e083015250610100610dfe84828501610e21565b61010083015250610120610e1484828501610e21565b6101208301525092915050565b600060208284031215610e3357600080fd5b610e3d60206114bd565b90506000610e4d84828501610e59565b60008301525092915050565b600081359050610e688161168a565b92915050565b600081519050610e7d8161168a565b92915050565b600060208284031215610e9557600080fd5b6000610ea384828501610c6c565b91505092915050565b600060208284031215610ebe57600080fd5b6000610ecc84828501610c81565b91505092915050565b600060208284031215610ee757600080fd5b600082013567ffffffffffffffff811115610f0157600080fd5b610f0d84828501610cff565b91505092915050565b600060208284031215610f2857600080fd5b6000610f3684828501610e59565b91505092915050565b600060208284031215610f5157600080fd5b6000610f5f84828501610e6e565b91505092915050565b6000610f748383610f80565b60208301905092915050565b610f898161157c565b82525050565b610f988161157c565b82525050565b610fa78161157c565b82525050565b6000610fb882611526565b610fc28185611549565b9350610fcd83611516565b8060005b83811015610ffe578151610fe58882610f68565b9750610ff08361153c565b925050600181019050610fd1565b5085935050505092915050565b6110148161158e565b82525050565b6110238161159a565b82525050565b6110328161159a565b82525050565b611041816115ce565b82525050565b600061105282611531565b61105c818561156b565b935061106c818560208601611601565b61107581611634565b840191505092915050565b600061108d601c8361155a565b91507f496e76616c69642065787069726174696f6e2074696d657374616d70000000006000830152602082019050919050565b60006110cd60188361155a565b91507f4d697373696e672073796e7468657469632073796d626f6c00000000000000006000830152602082019050919050565b600061110d60168361155a565b91507f4d697373696e672073796e746865746963206e616d65000000000000000000006000830152602082019050919050565b600061114d601d8361155a565b91507f436f6c6c61746572616c206973206e6f742077686974656c69737465640000006000830152602082019050919050565b600061118d601f8361155a565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b60006101e0830160008301516111d96000860182611335565b5060208301516111ec6020860182611335565b5060408301516111ff6040860182610f9e565b5060608301516112126060860182610f9e565b5060808301516112256080860182610f9e565b5060a083015161123860a0860182610f9e565b5060c083015161124b60c0860182611029565b5060e083015184820360e08601526112638282611047565b91505061010083015184820361010086015261127f8282611047565b91505061012083015161129661012086018261130a565b506101408301516112ab610140860182611335565b506101608301516112c061016086018261130a565b506101808301516112d561018086018261130a565b506101a08301516112ea6101a086018261130a565b506101c08301516112ff6101c086018261130a565b508091505092915050565b6020820160008201516113206000850182611335565b50505050565b61132f816115c4565b82525050565b61133e816115c4565b82525050565b60006020820190506113596000830184610f8f565b92915050565b600060408201905081810360008301526113798185610fad565b90506113886020830184610f8f565b9392505050565b60006020820190506113a4600083018461100b565b92915050565b60006020820190506113bf600083018461101a565b92915050565b60006020820190506113da6000830184611038565b92915050565b600060208201905081810360008301526113f981611080565b9050919050565b60006020820190508181036000830152611419816110c0565b9050919050565b6000602082019050818103600083015261143981611100565b9050919050565b6000602082019050818103600083015261145981611140565b9050919050565b6000602082019050818103600083015261147981611180565b9050919050565b6000602082019050818103600083015261149a81846111c0565b905092915050565b60006020820190506114b76000830184611326565b92915050565b6000604051905081810181811067ffffffffffffffff821117156114e057600080fd5b8060405250919050565b600067ffffffffffffffff82111561150157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611587826115a4565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115d9826115e0565b9050919050565b60006115eb826115a4565b9050919050565b82818337600083830152505050565b60005b8381101561161f578082015181840152602081019050611604565b8381111561162e576000848401525b50505050565b6000601f19601f8301169050919050565b61164e8161157c565b811461165957600080fd5b50565b6116658161158e565b811461167057600080fd5b50565b61167c8161159a565b811461168757600080fd5b50565b611693816115c4565b811461169e57600080fd5b5056fea2646970667358221220ff511e60d236b699740a16c21be8d5c26db031c88a5fe8d17bd298ba0c19eb0864736f6c63430006020033"

export interface ExpiringMultiPartyCreatorLibraryAddresses {
  ["ExpiringMultiPartyLib"]: string
}
