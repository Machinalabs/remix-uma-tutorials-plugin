import { Signer } from "ethers"
import { Provider, TransactionRequest } from "@ethersproject/providers"
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts"

import { ResultComputationTest } from "./ResultComputationTestContractInterface"

export class ResultComputationTestInstanceCreator extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<ResultComputationTest> {
    return super.deploy(overrides || {}) as Promise<ResultComputationTest>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): ResultComputationTest {
    return super.attach(address) as ResultComputationTest
  }
  connect(signer: Signer): ResultComputationTestInstanceCreator {
    return super.connect(signer) as ResultComputationTestInstanceCreator
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ResultComputationTest {
    return new Contract(address, _abi, signerOrProvider) as ResultComputationTest
  }
}

const _abi = [
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rawValue",
            type: "uint256",
          },
        ],
        internalType: "struct FixedPoint.Unsigned",
        name: "totalVotes",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "currentMode",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "votePrice",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "numberTokens",
        type: "uint256",
      },
    ],
    name: "wrapAddVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minVoteThreshold",
        type: "uint256",
      },
    ],
    name: "wrapGetResolvedPrice",
    outputs: [
      {
        internalType: "bool",
        name: "isResolved",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapGetTotalCorrectlyVotedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "revealHash",
        type: "bytes32",
      },
    ],
    name: "wrapWasVoteCorrect",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
]

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ae7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806373d4a13a1461005c578063a3c5fe481461007b578063abba025414610099578063cc15973f146100b5578063fb7da38c146100e6575b600080fd5b610064610116565b60405161007292919061099e565b60405180910390f35b61008361013c565b60405161009091906109c7565b60405180910390f35b6100b360048036036100ae9190810190610741565b610151565b005b6100cf60048036036100ca919081019061077d565b610179565b6040516100dd9291906108f8565b60405180910390f35b61010060048036036100fb9190810190610718565b6101a7565b60405161010d91906108dd565b60405180910390f35b600080600101604051806020016040529081600082015481525050908060020154905082565b600061014860006101c4565b60000151905090565b6101758260405180602001604052808481525060006102019092919063ffffffff16565b5050565b60008061019e604051806020016040528085815250600061032890919063ffffffff16565b91509150915091565b60006101bd82600061041190919063ffffffff16565b9050919050565b6101cc6106c6565b816000016000836002015481526020019081526020016000206040518060200160405290816000820154815250509050919050565b61022c818460010160405180602001604052908160008201548152505061044890919063ffffffff16565b83600101600082015181600001559050506102798184600001600085815260200190815260200160002060405180602001604052908160008201548152505061044890919063ffffffff16565b836000016000848152602001908152602001600020600082015181600001559050508260020154821415801561031457506103138360000160008560020154815260200190815260200160002060405180602001604052908160008201548152505084600001600085815260200190815260200160002060405180602001604052908160008201548152505061048190919063ffffffff16565b5b15610323578183600201819055505b505050565b6000806103336106c6565b61035060646103426032610496565b6104ce90919063ffffffff16565b905061037d848660010160405180602001604052908160008201548152505061048190919063ffffffff16565b80156103ef57506103ee816103e0876001016040518060200160405290816000820154815250508860000160008a60020154815260200190815260200160002060405180602001604052908160008201548152505061050390919063ffffffff16565b61048190919063ffffffff16565b5b15610404576001925084600201549150610409565b600092505b509250929050565b600082600201546040516020016104289190610921565b604051602081830303815290604052805190602001208214905092915050565b6104506106c6565b60405180602001604052806104768460000151866000015161055690919063ffffffff16565b815250905092915050565b60008160000151836000015111905092915050565b61049e6106c6565b60405180602001604052806104c4670de0b6b3a7640000856105ab90919063ffffffff16565b8152509050919050565b6104d66106c6565b60405180602001604052806104f884866000015161061b90919063ffffffff16565b815250905092915050565b61050b6106c6565b604051806020016040528061054b846000015161053d670de0b6b3a764000088600001516105ab90919063ffffffff16565b61061b90919063ffffffff16565b815250905092915050565b6000808284019050838110156105a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105989061095e565b60405180910390fd5b8091505092915050565b6000808314156105be5760009050610615565b60008284029050828482816105cf57fe5b0414610610576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106079061097e565b60405180910390fd5b809150505b92915050565b600061065d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610665565b905092915050565b600080831182906106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a3919061093c565b60405180910390fd5b5060008385816106b857fe5b049050809150509392505050565b6040518060200160405280600081525090565b6000813590506106e881610a6c565b92915050565b6000813590506106fd81610a83565b92915050565b60008135905061071281610a9a565b92915050565b60006020828403121561072a57600080fd5b6000610738848285016106d9565b91505092915050565b6000806040838503121561075457600080fd5b6000610762858286016106ee565b925050602061077385828601610703565b9150509250929050565b60006020828403121561078f57600080fd5b600061079d84828501610703565b91505092915050565b6107af816109fe565b82525050565b6107be81610a14565b82525050565b60006107cf826109e2565b6107d981856109ed565b93506107e9818560208601610a28565b6107f281610a5b565b840191505092915050565b600061080a601b836109ed565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b600061084a6021836109ed565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6020820160008201516108b960008501826108bf565b50505050565b6108c881610a1e565b82525050565b6108d781610a1e565b82525050565b60006020820190506108f260008301846107a6565b92915050565b600060408201905061090d60008301856107a6565b61091a60208301846107b5565b9392505050565b600060208201905061093660008301846107b5565b92915050565b6000602082019050818103600083015261095681846107c4565b905092915050565b60006020820190508181036000830152610977816107fd565b9050919050565b600060208201905081810360008301526109978161083d565b9050919050565b60006040820190506109b360008301856108a3565b6109c060208301846107b5565b9392505050565b60006020820190506109dc60008301846108ce565b92915050565b600081519050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b60005b83811015610a46578082015181840152602081019050610a2b565b83811115610a55576000848401525b50505050565b6000601f19601f8301169050919050565b610a7581610a0a565b8114610a8057600080fd5b50565b610a8c81610a14565b8114610a9757600080fd5b50565b610aa381610a1e565b8114610aae57600080fd5b5056fea26469706673582212203596df460137a8e880694e8f583db2b443667a1b7a59c0a4d077757166bc3f8364736f6c63430006020033"
